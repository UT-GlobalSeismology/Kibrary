/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'kensuke' at '16/12/06 16:43' with Gradle 3.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
plugins { id "de.undercouch.download" version "3.1.2" }
apply plugin: 'java'
apply plugin: 'eclipse'
import de.undercouch.gradle.tasks.download.Download
sourceCompatibility = 1.8
targetCompatibility = 1.8

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

def codename = 'sahagin'
jar.baseName = 'kibrary'
version = '0.4.2.1'

def kibraryhome = "$System.env.HOME/.Kibrary"


// In this section you declare where to find the dependencies of your project
repositories {
	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	jcenter()
	mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	// The production code uses the SLF4J logging API at compile time
	compile 'org.apache.commons:commons-math3:+'
	compile 'org.apache.commons:commons-lang3:+'
	compile 'commons-io:commons-io:+'
	compile 'commons-net:commons-net:+'
	compile 'org.apache.commons:commons-email:+'
	compile 'commons-net:commons-net:+'
	compile 'net.sf.epsgraphics:epsgraphics:+'
	compile 'commons-cli:commons-cli:+'
	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
}

jar {
	manifest {
		attributes 'Implementation-Title': 'kibrary', 'Implementation-Version': version
		attributes "Main-Class" : "io.github.kensuke1984.kibrary.About"
	}
	from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}


task downloadAndUnzip {
//    outputs.upToDateWhen { file('data').exists() }
	doLast {
	def downloadedFile = File.createTempFile("kibrary",".zip")
	download {
		src 'https://github.com/kensuke1984/Kibrary/archive/master.zip'
		dest downloadedFile
        }
	copy {
		from zipTree(downloadedFile)
		into kibraryhome
        }
	delete downloadedFile
    }
}

task wrapper(type: Wrapper) { gradleVersion = '3.2.1' }

task setupSourceCodes {
	doLast {	
		def master = file(kibraryhome+'/Kibrary-master')
		def src = file(kibraryhome+'/src')
		if (!src.exists()){
			tasks.downloadAndUnzip.execute()
			file(kibraryhome+'/Kibrary-master/src').renameTo(src)
			delete master
		}
	}
}

compileJava {
	dependsOn setupSourceCodes
}

// Gralde標準外のソースパスを追加
sourceSets {
	main {
		java { srcDir 'src/java' }
		resources { srcDir 'src/resources' }
	}
}

clean { delete file(kibraryhome+'/src') }
